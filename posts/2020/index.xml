<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>mochieer.techの新着記事</title>
    <link>https://mochieer.tech</link>
    <description>mochieer.techの新着記事</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <copyright>(c) mochieer</copyright>
    <lastBuildDate>Thu, 24 Dec 2020 00:00:00 +0900</lastBuildDate>
    
    <atom:link href="https://mochieer.tech/posts/2020/index.xml" rel="self" type="application/rss+xml" />
    
      <item>
        <title>Important Blue Internet Checkmark Pin</title>
        <link>https://mochieer.tech/posts/2023/01/11/important-blue-internet-checkmark-pin/</link>
        <pubDate>Wed, 11 Jan 2023 00:00:00 +0900</pubDate>
        
        <guid>https://mochieer.tech/posts/2023/01/11/important-blue-internet-checkmark-pin/</guid>
        <description>物理的な Important Blue Internet Checkmark Pin を買った。Tumblr のこういうお遊びは好きだ。笑わしてもらったので、笑ったら負けの精神でお金を払った。 重要な青いインター</description>
        <content:encoded>&lt;p&gt;物理的な &lt;a href=&#34;https://internet.watch.impress.co.jp/docs/yajiuma/1456131.html&#34;&gt;Important Blue Internet Checkmark Pin&lt;/a&gt; を買った。Tumblr のこういうお遊びは好きだ。笑わしてもらったので、笑ったら負けの精神でお金を払った。&lt;/p&gt;
&lt;figure&gt;
    &lt;img
      src=&#34;https://i.gyazo.com/thumb/1000/a1924124ebded30258785af27b0c7480-jpg.jpg&#34;
      alt=&#34;重要な青いインターネットのチェックマークピンとアイカツ！の同人缶バッジが付けられたトートバッグの写真&#34;width=&#34;1000&#34;height=&#34;750&#34;
    /&gt;
  &lt;figcaption&gt;重要な青いインターネットのチェックマークピンとアイカツ！の同人缶バッジが付けられたトートバッグ。&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;せっかくなのでトートバッグに取り付けたところ、インターネット存在としてパワーアップできたような気がする。&lt;/p&gt;
&lt;p&gt;なお、2つの認証マーク（厳密には Tumblr は認証マークとは言っていない）は土台でくっついているので別々に付けることはできない。&lt;/p&gt;
</content:encoded>
      </item>
      <item>
        <title>自家製キムチのキムチ鍋月間</title>
        <link>https://mochieer.tech/posts/2022/12/29/month-of-hot-pot-of-handmade-kimchi/</link>
        <pubDate>Thu, 29 Dec 2022 00:00:00 +0900</pubDate>
        
        <guid>https://mochieer.tech/posts/2022/12/29/month-of-hot-pot-of-handmade-kimchi/</guid>
        <description>10月はレンチンスパイスカレー月間とした。 その続編として11月中旬〜12月中旬にかけての1ヶ月間をキムチ鍋月間とした。なお、月をまたぐ形にな</description>
        <content:encoded>&lt;p&gt;10月は&lt;a href=&#34;https://mochieer.tech/posts/2022/11/02/spiced-curry-month-with-a-microwave-oven/&#34;&gt;レンチンスパイスカレー月間&lt;/a&gt;とした。&lt;/p&gt;
&lt;p&gt;その続編として11月中旬〜12月中旬にかけての1ヶ月間をキムチ鍋月間とした。なお、月をまたぐ形になったのは帰省の都合によるものだ。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;キムチは家で漬けた
&lt;ul&gt;
&lt;li&gt;とは言え、カレーのときと同様、凝った料理をしたいわけではないので、なるべく意識低めで継続できそうな方法を探した
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://mi-journey.jp/foodie/31981/&#34;&gt;漬け込み2時間！「自家製キムチ」の作り方。 意外なうまみ食材とは？【プロのレシピ】 | 三越伊勢丹の食メディア | FOODIE（フーディー）&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;この方法だとだしパックや塩麹を利用することで、漬け込み時間が短くても深い味を出せる、とのことで採用した&lt;/li&gt;
&lt;li&gt;また、今回の目的があくまでキムチ鍋用のキムチなので、どうせキムチ鍋に出汁が必要になることを考えると、キムチの時点でだしパックを利用しておいてもいいだろうという気持ちもあった&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;キムチを漬ける頻度
&lt;ul&gt;
&lt;li&gt;一度に白菜1/4株を使う&lt;/li&gt;
&lt;li&gt;4食分のキムチ鍋に利用する&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;調理手順の概要
&lt;ul&gt;
&lt;li&gt;食材のうち下処理が必要なものは行う
&lt;ul&gt;
&lt;li&gt;豚肉をすりおろしにんにくで炒める&lt;/li&gt;
&lt;li&gt;魚介を酒で煮る&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;キムチを合わせて軽く炒める&lt;/li&gt;
&lt;li&gt;昆布などのだし汁を入れる&lt;/li&gt;
&lt;li&gt;（あれば）根菜類を入れる&lt;/li&gt;
&lt;li&gt;蓋をして煮る&lt;/li&gt;
&lt;li&gt;香味野菜や豆腐を入れる&lt;/li&gt;
&lt;li&gt;煮る&lt;/li&gt;
&lt;li&gt;コチュジャンや味噌で味を調える&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;食材
&lt;ul&gt;
&lt;li&gt;鉄板は以下
&lt;ul&gt;
&lt;li&gt;豚肉（ロース、バラ）
&lt;ul&gt;
&lt;li&gt;脂が甘く相性が最高&lt;/li&gt;
&lt;li&gt;おろしにんにくなどで先に炒めてから鍋に入れるとよいが、洗い物を減らしたいので鍋で炒めた&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;アサリ、エビなどの海鮮&lt;/li&gt;
&lt;li&gt;ニラ&lt;/li&gt;
&lt;li&gt;長ネギ&lt;/li&gt;
&lt;li&gt;豆腐
&lt;ul&gt;
&lt;li&gt;豆腐の入ったキムチ鍋とはスンドゥブなのではないかという疑念を持ちながら食べた&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;美味しかった変わり種は以下
&lt;ul&gt;
&lt;li&gt;ウインナー&lt;/li&gt;
&lt;li&gt;さつま揚げ&lt;/li&gt;
&lt;li&gt;油揚げ&lt;/li&gt;
&lt;li&gt;トマト
&lt;ul&gt;
&lt;li&gt;酸味が出ておもしろい&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;うまく調理できなかった変わり種
&lt;ul&gt;
&lt;li&gt;チーちく
&lt;ul&gt;
&lt;li&gt;練り物が合うのだし韓国の辛い食べ物だし絶対に合うと確信して入れたがいまいちだった&lt;/li&gt;
&lt;li&gt;おそらくチーズの種類がよろしくなかった
&lt;ul&gt;
&lt;li&gt;チーちくはカマンベール風味&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;もつ
&lt;ul&gt;
&lt;li&gt;もつ鍋風にしてみたかった&lt;/li&gt;
&lt;li&gt;もつ鍋は牛もつでやることが多いが近所のスーパーには豚もつしかなかった&lt;/li&gt;
&lt;li&gt;長く煮込めばいいんだろうくらいの気持ちでやったが、やはり脂が少なかったのか、あまり鍋には合わなかった&lt;/li&gt;
&lt;li&gt;リベンジしたい&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;全体を通して
&lt;ul&gt;
&lt;li&gt;はじめから鍋にすることを前提にキムチを作っていると、ひょっとしたらキムチ味のスープに白菜を入れて煮込んでもあまり味に違いはないのではないかという気はした&lt;/li&gt;
&lt;li&gt;一方で、「キムチ鍋の元（白菜入り）」を4食分まとめて作っていると考えると、ある意味では時短なのか？という気持ちになった
&lt;ul&gt;
&lt;li&gt;なお、キムチ単体で少しは食べたが思った以上に美味しくできた&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;カレーほど何でも受け入れてくれる感はなかった
&lt;ul&gt;
&lt;li&gt;一定程度は脂がないと味に深みが作りにくいので、淡白な具材ばかりを選ぶと物足りさが強かった&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;今後の候補は以下。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;パエリア&lt;/li&gt;
&lt;li&gt;餃子&lt;/li&gt;
&lt;li&gt;ペペロンチーノ&lt;/li&gt;
&lt;li&gt;ちゃんぽん麺&lt;/li&gt;
&lt;/ul&gt;
</content:encoded>
      </item>
      <item>
        <title>ホームアイコンの研究</title>
        <link>https://mochieer.tech/posts/2022/11/13/study-of-home-icons/</link>
        <pubDate>Sun, 13 Nov 2022 00:00:00 +0900</pubDate>
        
        <guid>https://mochieer.tech/posts/2022/11/13/study-of-home-icons/</guid>
        <description>いくつかメジャーなアプリや Web ページを眺めて、ホームアイコンについてバリエーションを調査し、 SVG アイコンを習作した。 その1 家を家たらしめているも</description>
        <content:encoded>&lt;p&gt;いくつかメジャーなアプリや Web ページを眺めて、ホームアイコンについてバリエーションを調査し、 SVG アイコンを習作した。&lt;/p&gt;
&lt;h2 id=&#34;その1&#34;&gt;その1&lt;/h2&gt;
&lt;figure&gt;
    &lt;img
      src=&#34;https://i.gyazo.com/c1769c2588516f5c3be9b53d914fbc37.png&#34;
      alt=&#34;ホームアイコン (1)&#34;width=&#34;816&#34;height=&#34;816&#34;
    /&gt;
  
&lt;/figure&gt;

&lt;p&gt;家を家たらしめているものは屋根とドアである。と思っていたのだが、今回調べた限りだと屋根が壁より横に飛び出している形のものは意外と少数派だった。FontAwesome や Microsoft のデザインシステム Fluent UI のアイコンセットで、この飛び出した屋根が利用されていた。&lt;/p&gt;
&lt;p&gt;やや写実的すぎて、スマホで利用するには抽象度が低いと考えられているのかもしれない。写実的というと、煙突をつけるケースもあった。&lt;/p&gt;
&lt;p&gt;ハイライトカラーを入れるならやはり屋根かなと思う。&lt;/p&gt;
&lt;h2 id=&#34;その2&#34;&gt;その2&lt;/h2&gt;
&lt;figure&gt;
    &lt;img
      src=&#34;https://i.gyazo.com/e3436f116c8a3f17821d31d38bd60e06.png&#34;
      alt=&#34;ホームアイコン (2)&#34;width=&#34;816&#34;height=&#34;816&#34;
    /&gt;
  
&lt;/figure&gt;

&lt;p&gt;長方形の上に三角形を乗せた形の五角形に、下部にドアの部分をくり抜いた形。今回調べた限りでは最も主流であった。&lt;/p&gt;
&lt;p&gt;Material Icons, Instagram, Amazon ショッピングアプリ, Yahoo! JAPAN アプリなどが概ねこの形状のものを利用していた。ただし、後述するような亜種が多い。&lt;/p&gt;
&lt;p&gt;ハイライトカラーを入れるところはドア部分しかない。&lt;/p&gt;
&lt;h2 id=&#34;その3&#34;&gt;その3&lt;/h2&gt;
&lt;figure&gt;
    &lt;img
      src=&#34;https://i.gyazo.com/4d4ea45f46f506ec0eed4f5628361eec.png&#34;
      alt=&#34;ホームアイコン (3)&#34;width=&#34;816&#34;height=&#34;816&#34;
    /&gt;
  
&lt;/figure&gt;

&lt;p&gt;その2のドアをアーチ状にしたもの。柔らかい雰囲気になるのと、ドアにハイライトを入れた際の可愛さが増す気がする。&lt;/p&gt;
&lt;h2 id=&#34;その4&#34;&gt;その4&lt;/h2&gt;
&lt;figure&gt;
    &lt;img
      src=&#34;https://i.gyazo.com/208005d6866082e43f4ddbdb4db93226.png&#34;
      alt=&#34;ホームアイコン (4)&#34;width=&#34;816&#34;height=&#34;816&#34;
    /&gt;
  
&lt;/figure&gt;

&lt;p&gt;その2をシュッとさせたもの。正方形の領域にぴったり五角形を収めようとすると長方形がどうしても横長になってしまい、野暮ったく見える。この例では左右を余らせて長方形部分を正方形に近づけている。&lt;/p&gt;
&lt;p&gt;また、線の角を丸めないことでシュッとした感を強くしてみた。個人的には鋭角なアイコンは触ると痛そうなので角は丸まっている方が好み。&lt;/p&gt;
&lt;h2 id=&#34;その5&#34;&gt;その5&lt;/h2&gt;
&lt;figure&gt;
    &lt;img
      src=&#34;https://i.gyazo.com/4b6f32827a9b4afb7bd481cf51830212.png&#34;
      alt=&#34;ホームアイコン (5)&#34;width=&#34;816&#34;height=&#34;816&#34;
    /&gt;
  
&lt;/figure&gt;

&lt;p&gt;これもその2をシュッとさせたもの。ドア部分が線になっているのが面白い。よりミニマムなデザインと言える。LINE がこの形状だったほか、TikTok も同様にドア部分を線として表現していた。&lt;/p&gt;
&lt;h2 id=&#34;その6&#34;&gt;その6&lt;/h2&gt;
&lt;figure&gt;
    &lt;img
      src=&#34;https://i.gyazo.com/922b0bd0321985ee6ec655172b50e61c.png&#34;
      alt=&#34;ホームアイコン (6)&#34;width=&#34;816&#34;height=&#34;816&#34;
    /&gt;
  
&lt;/figure&gt;

&lt;p&gt;これは変わり種、というか Twitter の模倣。丸は窓なのかもしれないが、Twitter ということを考えるとこれは家でなく鳥小屋なのかもしれない。そう言えばと思って確認してみると、国産ドキュメントサービスの esa もホームアイコンには丸がついていた。やはり鳥小屋なのだろうか。&lt;/p&gt;
&lt;p&gt;左右の壁を下に向けて狭めるのは TikTok もやっていて、最近のスマホのように十分な解像度がある場合は斜めの線が汚く見えることもないし、全体に丸っこい印象になるのでポップさが強くなる。&lt;/p&gt;
&lt;h2 id=&#34;ラップアップ&#34;&gt;ラップアップ&lt;/h2&gt;
&lt;p&gt;ホームアイコンと形状が衝突しうるものは上矢印だろうと思われる。つまり、認知のしやすさに重きを置くと屋根よりドアが重要で、シンプルな形状にするならドアを強調することが重要であると言えそうだ。&lt;/p&gt;
&lt;p&gt;屋根の角度、壁の角度、ドアの形状や角の丸さで全体の印象を変えることができるので、ブランドイメージにあったアイコンに調整したり、遊び心を入れる余地が大いにあるタイプのアイコンだと感じた。&lt;/p&gt;
</content:encoded>
      </item>
      <item>
        <title>レンチンスパイスカレー月間</title>
        <link>https://mochieer.tech/posts/2022/11/02/spiced-curry-month-with-a-microwave-oven/</link>
        <pubDate>Wed, 02 Nov 2022 00:00:00 +0900</pubDate>
        
        <guid>https://mochieer.tech/posts/2022/11/02/spiced-curry-month-with-a-microwave-oven/</guid>
        <description>料理をすることが好きだ。だが、食に対しては特にこだわりがあるわけではない。 ずっと在宅勤務をしていると、明確に仕事から離れる時間があったほうが</description>
        <content:encoded>&lt;p&gt;料理をすることが好きだ。だが、食に対しては特にこだわりがあるわけではない。&lt;/p&gt;
&lt;p&gt;ずっと在宅勤務をしていると、明確に仕事から離れる時間があったほうが良いのだが、そのひとつが料理という実際に手を動かせる作業である。特に野菜を切るという作業は心を無にできるのでおすすめだ。&lt;/p&gt;
&lt;p&gt;ということで、私は料理に特別こだわりたいわけでもないが、とにかく料理という作業がしたい。ただ、その作業を生活の負担にはしたくない。特に献立を考えることが好きでなく、冷蔵庫の中身を（ほぼ何も考えずに）即興で消費していくスタイルが好ましい。&lt;/p&gt;
&lt;p&gt;そう考えたときに、毎晩同じ料理を作り続けてみるのはどうだろうかと考えた。きっかけはこの本。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://amzn.to/3NpIxhM&#34;&gt;ひとりぶんのレンチンスパイスカレー Kindle版&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;ベースの調味料はスパイス3種と塩、にんにく、しょうがのすりおろし、チリペッパーくらいで、あとはトマトがあれば、具（鶏、ミンチ、魚、エビなどの肉類、ほうれん草、ニラ、パプリカなどの野菜類）の組み合わせでいろいろなバリエーションのスパイスカレーが作れるので、毎日同じ調理方法を無心で繰り返していても栄養的にはあまり偏らずにすむのではないかと考えた。&lt;/p&gt;
&lt;p&gt;そして実際に10月をレンチンスパイスカレー月間とし、実践した。以下、やったことと得た知見を書き記す。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ほとんど毎日の夕食をレンチンスパイスカレーとした
&lt;ul&gt;
&lt;li&gt;外食を3日したが、それ以外は本当にレンチンスパイスカレー以外食べなかった&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;書籍でもおすすめされていた &lt;a href=&#34;https://amzn.to/3SXakao&#34;&gt;PYREX ベジタブル スチーム ポット 700ml&lt;/a&gt; を使用した
&lt;ul&gt;
&lt;li&gt;レンチンしたあと、上からごはんを入れてそのまま食べられるので洗い物が少なくて良い&lt;/li&gt;
&lt;li&gt;男性の一食分には少し小さいかもしれない（食材を山盛りにするとまぜるときにスパイスが溢れる）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;スパイスは S&amp;amp;B のターメリック、クミン、コリアンダー、チリペッパー、パプリカパウダー、こしょうを使用した（そのへんのスーパーで調達できる）
&lt;ul&gt;
&lt;li&gt;書籍ではターメリック、クミン、コリアンダーの 1:1:1 の配合を基本としていたが、個人的な好みとしてはコリアンダー多めのものがカレーらしい風味があって好きだった&lt;/li&gt;
&lt;li&gt;ターメリック、クミン、コリアンダーの基本のスパイスだとほとんど辛味がでないのでチリペッパーはあったほうが良い&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;肉類はいろいろ試したが、結局は冷凍の鶏むね肉、冷凍の合い挽きミンチ、冷凍のエビが使い勝手が良かった
&lt;ul&gt;
&lt;li&gt;冷凍だと買い物に行く頻度を減らせる&lt;/li&gt;
&lt;li&gt;冷凍の魚は先に解凍して水気を切らないと臭みが強いが、鶏、ミンチ、エビは冷凍のままレンジに入れられる&lt;/li&gt;
&lt;li&gt;合い挽きミンチは油が出るので後述する高温で調理したい野菜と相性が良い&lt;/li&gt;
&lt;li&gt;鶏肉は軽く小麦粉とハーブ類をまぶしておくと、鶏肉だけで味が出る
&lt;ul&gt;
&lt;li&gt;小麦粉をたくさんまぶすとルウで作ったカレーのように多少のとろみがつく&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;野菜はニラ、かぼちゃ、白菜がおすすめ
&lt;ul&gt;
&lt;li&gt;カレーは基本的にあらゆる具材が均一な味になるので、それ自身が強い味を持っているニラやかぼちゃはアクセントになって良い&lt;/li&gt;
&lt;li&gt;白菜は大量に水を出し、また味を吸うので、スープカレーっぽい仕上がりになって面白かった&lt;/li&gt;
&lt;li&gt;たまねぎはレンジでは温度が上がりきらず辛味が強く残るのでフライドオニオンを利用するのが良い&lt;/li&gt;
&lt;li&gt;かぼちゃ、じゃがいも、にんじんなどの根菜は事前に水と一緒にレンチンして柔らかくしておく必要がある&lt;/li&gt;
&lt;li&gt;なすやズッキーニなどをとろとろに調理したい場合は、少しオリーブオイルをかけてレンチンするなど工夫が必要
&lt;ul&gt;
&lt;li&gt;冷凍のグリル野菜ミックスを入れるのもあり&lt;/li&gt;
&lt;li&gt;同様にホールスパイスの類も高温の油でないと利用できないので、たまにはフライパンで作ってもいいかもしれない&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ごはんも少し味をつけるなどの工夫をした
&lt;ul&gt;
&lt;li&gt;スープストックトーキョーのごはんが好きで、あれを再現しようとしてオリーブオイルと塩を加えて炊き込み、白ごまを散らしたりした&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;毎日同じ調理方法を繰り返すと圧倒的にフィードバックループのサイクルが短く、毎日の改善を積み重ねられて楽しかった。&lt;/p&gt;
&lt;p&gt;今後も完全食っぽいタイプでいろんな具材と相性の良い料理で◯◯月間をやりたいと思っている。今のところは、&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;パエリア&lt;/li&gt;
&lt;li&gt;餃子&lt;/li&gt;
&lt;li&gt;キムチ鍋
&lt;ul&gt;
&lt;li&gt;広く鍋とすると何鍋にするかということを考えないといけないので、狭くキムチ鍋限定&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ペペロンチーノ
&lt;ul&gt;
&lt;li&gt;毎日パスタをおなかいっぱい食べていると炭水化物が過剰になりそうなので、せめて辛めのもので……&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;あたりを候補に考えている。&lt;/p&gt;
</content:encoded>
      </item>
      <item>
        <title>Cloudflare Workers のファーストインプレッション</title>
        <link>https://mochieer.tech/posts/2022/07/03/first-implession-of-cloudflare-workers/</link>
        <pubDate>Sun, 03 Jul 2022 00:00:00 +0900</pubDate>
        
        <guid>https://mochieer.tech/posts/2022/07/03/first-implession-of-cloudflare-workers/</guid>
        <description>かねてより評判の良い Cloudflare Workers を使ってみた。 Cloudflare Workers Cloudflare Workers documentation · Cloudflare Workers docs 以下の簡単な Web API を作った。リクエストのパスやクエリパラメータに応じて動的な SVG を返却す</description>
        <content:encoded>&lt;p&gt;かねてより評判の良い Cloudflare Workers を使ってみた。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://workers.cloudflare.com/&#34;&gt;Cloudflare Workers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://developers.cloudflare.com/workers/&#34;&gt;Cloudflare Workers documentation · Cloudflare Workers docs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;以下の簡単な Web API を作った。リクエストのパスやクエリパラメータに応じて動的な SVG を返却する、というものだ。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/mochieer/alteremoji&#34;&gt;mochieer/alteremoji: Generates an SVG that displays any number (even decimals) of emojis.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://zenn.dev/mochieer/articles/4e1eef9de8c64e&#34;&gt;半端なサイズの絵文字を表示する技術&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;まず、開発者体験が非常に優れている。&lt;/p&gt;
&lt;p&gt;wrangler という CLI を使うのだが、これが npm （または yarn）でインストールできる。認証、プロジェクトの作成、ローカルでの実行、デプロイまで全部これで完結していて、何も迷うことがない。&lt;/p&gt;
&lt;p&gt;また、プロジェクトの作成時に TypeScript を選ぶと、作成された &lt;code&gt;index.ts&lt;/code&gt; には &lt;code&gt;Request&lt;/code&gt; を受けて &lt;code&gt;Response&lt;/code&gt; を返すハローワールドが書き出されるので、それぞれの型定義を参照しつつ自分の作りたい &lt;code&gt;Request =&amp;gt; Response&lt;/code&gt; な関数を書いてあげればいいだけのイメージで、特定のインフラに依存しているという感覚が一切なかった。&lt;/p&gt;
&lt;p&gt;TypeScript のコンパイルやファイルのバンドルは wrangler がやってくれているようで、 &lt;code&gt;wrangler dev&lt;/code&gt;, &lt;code&gt;wrangler publish&lt;/code&gt; とは別に webpack を動かさなきゃ、みたいなことはない。&lt;/p&gt;
&lt;p&gt;おそらく普段から TypeScript を書いていればほとんどつまずくポイントはないように思う。フロントエンドエンジニアにとってネットワークやミドルウェアは心理的にハードルが高いが、丁寧に TypeScript をサポートしてくれていて、実際にはほとんどハードルなんてものはない。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;出来上がったものはだいたい以下のようになった。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;36
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;37
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;38
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;39
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;40
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;41
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;42
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;43
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;44
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;45
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;46
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;47
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;48
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;49
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;50
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;51
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;52
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;53
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;54
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-ts&#34; data-lang=&#34;ts&#34;&gt;&lt;span class=&#34;kr&#34;&gt;export&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;default&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;kr&#34;&gt;async&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;fetch&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;request&lt;/span&gt;: &lt;span class=&#34;kt&#34;&gt;Request&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;env&lt;/span&gt;: &lt;span class=&#34;kt&#34;&gt;Env&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;nx&#34;&gt;ctx&lt;/span&gt;: &lt;span class=&#34;kt&#34;&gt;ExecutionContext&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Promise&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;Response&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;try&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
      &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;AlterEmojiResponse&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;createFromRequest&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
        &lt;span class=&#34;nx&#34;&gt;AlterEmojiRequest&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;createFromCloudflareWorkersRequest&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;request&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
      &lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;toCloudflareWorkersResponse&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;catch&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
      &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;AlterEmojiResponse&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;asError&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;().&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;toCloudflareWorkersResponse&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;

&lt;span class=&#34;kr&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;AlterEmojiRequest&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;kr&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;createFromCloudflareWorkersRequest&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;req&lt;/span&gt;: &lt;span class=&#34;kt&#34;&gt;Request&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;AlterEmojiRequest&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;AlterEmojiRequest&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;req&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;url&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

  &lt;span class=&#34;kr&#34;&gt;constructor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
    &lt;span class=&#34;kr&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;requestUrl&lt;/span&gt;: &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{}&lt;/span&gt;

  &lt;span class=&#34;cm&#34;&gt;/* ... */&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;kr&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;AlterEmojiResponse&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;kr&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;createFromRequest&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;req&lt;/span&gt;: &lt;span class=&#34;kt&#34;&gt;AlterEmojiRequest&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;AlterEmojiResponse&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;AlterEmojiResponse&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;req&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;emoji&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;req&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;count&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;req&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

  &lt;span class=&#34;kr&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;asError&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;AlterEmojiResponse&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;AlterEmojiResponse&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;🤮&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;24&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

  &lt;span class=&#34;kr&#34;&gt;constructor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
    &lt;span class=&#34;kr&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;emoji&lt;/span&gt;: &lt;span class=&#34;kt&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;kr&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;count&lt;/span&gt;: &lt;span class=&#34;kt&#34;&gt;number&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;kr&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;size&lt;/span&gt;: &lt;span class=&#34;kt&#34;&gt;number&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{}&lt;/span&gt;

  &lt;span class=&#34;nx&#34;&gt;toCloudflareWorkersResponse&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Response&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Response&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;toString&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(),&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
      &lt;span class=&#34;nx&#34;&gt;headers&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;s1&#34;&gt;&amp;#39;Content-Type&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;image/svg+xml&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;s1&#34;&gt;&amp;#39;Vary&amp;#39;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;Accept-Encoding&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
      &lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;})&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

  &lt;span class=&#34;cm&#34;&gt;/* ... */&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;一応、 Cloudflare Workers への依存はメインの関数のみにして、独自の Request, Response を実装している。どんな小さなプロジェクトでもインフラやフレームワークへの依存とビジネスロジックは混ぜるべきではない。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;作ってみて、開発者体験的には最高だったのだが、さて、これはエッジでやる必要があったのか考えると、やや疑問であった。普通に Lambda 的な FaaS で良いのではないか、と。&lt;/p&gt;
&lt;p&gt;ユーザーに近いエッジサーバーで実行されるのでレスポンスが早いというメリットは確かにある。が、別に Lambda の前に CloudFront がいれば同一リクエストに対してはキャッシュを返せるので応答速度的には劣っているとは言い切れない。&lt;/p&gt;
&lt;p&gt;と思っていたらちょうど Twitter で興味深いやり取りがあった。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;deno deploy や cloudflare workers、ts 好きな人達なんでもっと使って遊ばないんだろうと思ってる。
&lt;cite&gt;&lt;a href=&#34;https://twitter.com/mattn_jp/status/1543217325998231552&#34;&gt;https://twitter.com/mattn_jp/status/1543217325998231552&lt;/a&gt;&lt;/cite&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;クライアントとサーバーの間に処理を置けたらいいのになぁ。ってクライアントの人が思うのかどうか。ワーカーだけで完結しようとするのは戦略として違う。
&lt;cite&gt;&lt;a href=&#34;https://twitter.com/voluntas/status/1543220179139964928&#34;&gt;https://twitter.com/voluntas/status/1543220179139964928&lt;/a&gt;&lt;/cite&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;なので Worker をサーバーとみなすのも違くてあれは前処理や後処理ができる Proxy なのです。それを踏まえて実装しないとダメなので興味持つ人が少ない気がする。
&lt;cite&gt;&lt;a href=&#34;https://twitter.com/voluntas/status/1543220798336679936&#34;&gt;https://twitter.com/voluntas/status/1543220798336679936&lt;/a&gt;&lt;/cite&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;なるほど、そう考えると今回実装したレスポンスを自ら生成するのはむしろ邪道なようだ。&lt;/p&gt;
&lt;p&gt;用途としては、&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;リバプロ的にオリジンサーバーにリクエストを捌きつつ、ログサーバーにもログを送信する&lt;/li&gt;
&lt;li&gt;特定の時間だけ S3 的なところに置いている静的なメンテナンスページを返す&lt;/li&gt;
&lt;li&gt;User-Agent に応じて独自ヘッダーを付けてオリジンサーバーに渡す&lt;/li&gt;
&lt;li&gt;成功時には何もしないがオリジンが500系エラーを返したときだけ、ヘッダーやパスに応じてエラーメッセージを差し替える&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;みたいなのが王道のようだ。&lt;/p&gt;
&lt;p&gt;調べてみると &lt;a href=&#34;https://github.com/cloudflare/worker-sentry#example&#34;&gt;@cloudflare/worker-sentry&lt;/a&gt; なんてものがあるようで、例としてまさにオリジンがエラーを返したときだけ Sentry に流すようなことをしている。確かにオリジンが本当に死んでしまったらエラーすら送信されないので、何らか別の方法で死活監視をしないと、というのは監視のジレンマなので、リバプロがエラーを吐いてくれると嬉しいように思う。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;まとめると、&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;とてもハードルが低い
&lt;ul&gt;
&lt;li&gt;普段 JS/TS を書いているフロントエンドエンジニアはほぼ何も考えずに動かせる&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;一方で、「クライアントとサーバーの間に処理を置けたらいいのになぁ」というときに利用すると強力
&lt;ul&gt;
&lt;li&gt;フロントエンド視点ではなくではなくシステムとして見たときに、実は proxy にも処理を書けるんだよ、という視点を持てることが大事&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;のようだ。&lt;/p&gt;
</content:encoded>
      </item>
      <item>
        <title>このサイトのタイポグラフィ</title>
        <link>https://mochieer.tech/posts/2022/06/30/typography-on-this-website/</link>
        <pubDate>Thu, 30 Jun 2022 00:00:00 +0900</pubDate>
        
        <guid>https://mochieer.tech/posts/2022/06/30/typography-on-this-website/</guid>
        <description>文字サイズ 少し前まで大きめの文字を使っていたが、ブラウザ規定の文字サイズをそのまま 1rem として以下の倍率で5種類のサイズを定義して使っている。 1</description>
        <content:encoded>&lt;h2 id=&#34;文字サイズ&#34;&gt;文字サイズ&lt;/h2&gt;
&lt;p&gt;少し前まで大きめの文字を使っていたが、ブラウザ規定の文字サイズをそのまま &lt;code&gt;1rem&lt;/code&gt; として以下の倍率で5種類のサイズを定義して使っている。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-scss&#34; data-lang=&#34;scss&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$font-xl&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;rem&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 1rem=16pxのとき32px
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$font-l&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;.375&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;rem&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 1rem=16pxのとき22px
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$font-m&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;rem&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;$font-s&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;.875&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;rem&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 1rem=16pxのとき14px
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;nv&#34;&gt;$font-xs&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;.75&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;rem&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;// 1rem=16pxのとき
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;カーニング&#34;&gt;カーニング&lt;/h2&gt;
&lt;p&gt;日本語ベタ組みメインなので、 &lt;code&gt;body&lt;/code&gt; レベルでカーニングやプロポーショナルメトリクスを無効にしている。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-scss&#34; data-lang=&#34;scss&#34;&gt;&lt;span class=&#34;nt&#34;&gt;body&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;na&#34;&gt;font-feature-settings&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;palt&amp;#34;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;na&#34;&gt;font-kerning&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;ni&#34;&gt;none&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;一方で、見出しとかは詰め組したいので &lt;code&gt;.u-kerning&lt;/code&gt; というユーティリティクラスを用意している。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-scss&#34; data-lang=&#34;scss&#34;&gt;&lt;span class=&#34;nc&#34;&gt;.u-kerning&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;na&#34;&gt;font-feature-settings&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;palt&amp;#34;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;na&#34;&gt;font-kerning&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;ni&#34;&gt;normal&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;コンテナ幅&#34;&gt;コンテナ幅&lt;/h2&gt;
&lt;p&gt;日本語ベタ組みの場合、幅は &lt;code&gt;1rem&lt;/code&gt; の自然数倍がよい。ということでコンテナの幅は &lt;code&gt;42rem&lt;/code&gt; としている。これは &lt;code&gt;1rem&lt;/code&gt; が 16px としたときに 672px となるのだが、本文の幅は 600-700px くらいが読みやすいと言われているようなので、その範囲で好みで調節している。&lt;/p&gt;
&lt;p&gt;ただ、レスポンシブのために &lt;code&gt;max-width: 42rem&lt;/code&gt; となっているので、それより小さい画面幅では実際は &lt;code&gt;1rem&lt;/code&gt; の自然数倍でなくなる場合がある。こうなると左右の余白のバランスが悪くなったり、行末が揃いにくくなったりする。&lt;/p&gt;
&lt;p&gt;この対策として &lt;code&gt;display: grid&lt;/code&gt; を使用して、 &lt;code&gt;1rem&lt;/code&gt; のグリッドを中央寄せで画面幅いっぱいまで繰り返すようにしている。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-scss&#34; data-lang=&#34;scss&#34;&gt;&lt;span class=&#34;nc&#34;&gt;.l-container&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;na&#34;&gt;box-sizing&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;ni&#34;&gt;content-box&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;na&#34;&gt;margin&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;ni&#34;&gt;auto&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;na&#34;&gt;max-width&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;42&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;rem&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;na&#34;&gt;display&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;ni&#34;&gt;grid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;na&#34;&gt;grid-template-columns&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;repeat&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;ni&#34;&gt;auto&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;ni&#34;&gt;fill&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;rem&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
  &lt;span class=&#34;na&#34;&gt;justify-content&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;ni&#34;&gt;center&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;nc&#34;&gt;.l-container&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;na&#34;&gt;grid-column&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;なお、この場合左右の余白が実際に何ピクセルで描画されているか判定が難しい。&lt;/p&gt;
&lt;p&gt;画像やコードブロックは左右の余白なしで、本文より少し幅広になっているのが好きで、ここは拘りたいと思っている。左右にネガティブマージンを入れることで実現できるのだが、 grid で中央寄せするとそれができない。（ネガティブマージンとして何ピクセル広げればよいか分からないので）&lt;/p&gt;
&lt;p&gt;ということで少し工夫して画面幅いっぱいを実現している。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-scss&#34; data-lang=&#34;scss&#34;&gt;&lt;span class=&#34;nt&#34;&gt;figure&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;k&#34;&gt;@media&lt;/span&gt; &lt;span class=&#34;ni&#34;&gt;screen&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;and&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;max-width&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;44&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;rem&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;na&#34;&gt;margin-right&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;calc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;50&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;vw&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;50&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;na&#34;&gt;margin-left&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;calc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;50&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;vw&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;50&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;コンテナ幅とは関係ないが、縦を揃えるという意味でもうひとつ。箇条書きの左余白を &lt;code&gt;1rem&lt;/code&gt; の自然数倍としている。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-scss&#34; data-lang=&#34;scss&#34;&gt;&lt;span class=&#34;nt&#34;&gt;ul&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;ol&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;na&#34;&gt;padding-inline-start&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;rem&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;vertical-rhythm&#34;&gt;Vertical Rhythm&lt;/h2&gt;
&lt;p&gt;縦方向にリズムを作りましょう、そのリズムを繰り返しましょうというのが vertical rhythm と呼ばれるものである。&lt;/p&gt;
&lt;p&gt;具体的には縦方向の余白を1行の自然数倍にしてあげると良い、とされている。1行の高さを &lt;code&gt;$vr-unit&lt;/code&gt; として、それを使いまわしている。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-scss&#34; data-lang=&#34;scss&#34;&gt;&lt;span class=&#34;nv&#34;&gt;$vr-line-height&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;.9&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;nv&#34;&gt;$vr-unit&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;.9&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;rem&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;nt&#34;&gt;body&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;na&#34;&gt;line-height&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$vr-line-height&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;nt&#34;&gt;h1&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;h2&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;h3&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;h4&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;h5&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;h6&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;na&#34;&gt;margin&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$vr-unit&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;mf&#34;&gt;.5&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$vr-unit&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;.5&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;na&#34;&gt;line-height&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$vr-unit&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;nt&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;ul&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;ol&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nt&#34;&gt;blockquote&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;na&#34;&gt;margin&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;nv&#34;&gt;$vr-unit&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;禁則処理&#34;&gt;禁則処理&lt;/h2&gt;
&lt;p&gt;前述の通りこのサイトでは現在1行最大で42文字、画面幅がそれ未満の場合は幅いっぱいに表示しているので、変なところで改行されてしまうことのデメリットが行末が揃わないことのデメリットより大きいと判断し、できるだけ厳しい &lt;code&gt;line-break: strict&lt;/code&gt; を指定している。&lt;/p&gt;
&lt;p&gt;1行あたりの文字数が少ない場合は割とゆるいほうが良い（行末がズレにくいほうがブロックとして視認性が高い）ので、このあたりはケースバイケースだと思う。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-scss&#34; data-lang=&#34;scss&#34;&gt;&lt;span class=&#34;nt&#34;&gt;html&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;na&#34;&gt;line-break&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;ni&#34;&gt;strict&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;na&#34;&gt;hanging-punctuation&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;ni&#34;&gt;allow-end&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;参考リンク&#34;&gt;参考リンク&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://paper.dropbox.com/doc/CSS-wPD007Sd9dSeEDLP78jri&#34;&gt;本文のタイポグラフィとCSS – Dropbox Paper&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://coliss.com/articles/build-websites/operation/css/about-pixels-and-accessibility.html&#34;&gt;CSSの単位px、em、remはどれをどこで使用するのがよいか、ピクセルとアクセシビリティにおける意外な真相 | コリス&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://gist.github.com/yuheiy/89ba79fd0510f98613c217a7dbeb8d03&#34;&gt;ウェブデザインの余白に規則性を持たせるためのパターン&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content:encoded>
      </item>
      <item>
        <title>〇〇した話</title>
        <link>https://mochieer.tech/posts/2022/06/23/story-of-x/</link>
        <pubDate>Thu, 23 Jun 2022 00:00:00 +0900</pubDate>
        
        <guid>https://mochieer.tech/posts/2022/06/23/story-of-x/</guid>
        <description>「〇〇した話」的な見出しが苦手だ。 これはもう完全に主観的な問題ではあるものの、理屈でいうと「○○した」で止めてしまってよいではないかと思って</description>
        <content:encoded>&lt;p&gt;「〇〇した話」的な見出しが苦手だ。&lt;/p&gt;
&lt;p&gt;これはもう完全に主観的な問題ではあるものの、理屈でいうと「○○した」で止めてしまってよいではないかと思ってしまう。&lt;/p&gt;
&lt;p&gt;技術系のブログや投稿でもよく目にするが、こういう「〇〇した話」というフォーマットでタイトルがつけられていると、周囲の慣習や内輪ノリにで見出しを決めてしまうような人なのだなと、強烈な色眼鏡を装着して読んでしまう。&lt;/p&gt;
&lt;p&gt;RSS を購読している企業テックブログで適当に検索してみたところ、ほぼすべてのテックブログで「〇〇の話」フォーマットの記事が投稿されている。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://devblog.thebase.in/entry/2022/03/28/130016&#34;&gt;OpenAPI Generator で API Client と型を自動生成した話 - BASEプロダクトチームブログ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://developers.cyberagent.co.jp/blog/archives/33885/&#34;&gt;CloudFront + Lambda@Edge で SPAのサイトを部分的にSSGにした話 | CyberAgent Developers Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://swet.dena.com/entry/2022/03/24/123000&#34;&gt;この1年すすめていた「プロジェクトの健康状態の可視化と予防」と「自動テストの適用範囲の拡大」という施策についての話 - DeNA Testing Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://moneyforward.com/engineers_blog/2022/06/13/my-english-learning-experience/&#34;&gt;3ヶ月間の英語研修でTOEICスコア 665 → 890 になった話 | Money Forward Money Forward Engineers&#39; Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://medium.com/eureka-engineering/%E3%82%A8%E3%82%A6%E3%83%AC%E3%82%AB%E9%96%8B%E7%99%BA%E7%B5%84%E7%B9%94%E5%85%A8%E4%BD%93%E3%81%A7%E3%83%AA%E3%83%A9%E3%82%A4%E3%82%A2%E3%83%93%E3%83%AA%E3%83%86%E3%82%A3%E3%81%A8%E5%90%91%E3%81%8D%E5%90%88%E3%81%86%E3%81%9F%E3%82%81%E3%81%AB-sre-team%E3%81%AEvision-mission-values%E3%82%92rebuild%E3%81%97%E3%81%9F%E8%A9%B1-bb47daae8290&#34;&gt;エウレカ開発組織全体でリライアビリティと向き合うために、SRE TeamのVision/Mission/ValuesをRebuildした話 - Eureka Engineering - Medium&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://medium.com/finc-engineering/%E6%96%B0%E4%BA%BA%E3%81%93%E3%81%9D%E3%83%AA%E3%83%95%E3%82%A1%E3%82%AF%E3%82%BF%E3%83%AA%E3%83%B3%E3%82%B0%E3%82%92%E3%82%84%E3%82%8C-%E3%83%9E%E3%82%A4%E3%82%AF%E3%83%AD%E3%82%B5%E3%83%BC%E3%83%93%E3%82%B9%E3%81%AE%E6%9C%80%E5%8F%A4%E3%81%AE%E3%82%B5%E3%83%BC%E3%83%93%E3%82%B9%E3%82%92%E3%83%AA%E3%83%95%E3%82%A1%E3%82%AF%E3%82%BF%E3%83%AA%E3%83%B3%E3%82%B0%E3%81%97%E3%81%9F%E8%A9%B1-21e5143ce17e&#34;&gt;新人こそリファクタリングをやれ！ ~マイクロサービスの最古のサービスをリファクタリングした話 ~ - FiNC Tech Blog - Medium&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://tech.gunosy.io/entry/ios_to_server_side&#34;&gt;iOSエンジニアがサーバーサイドもやってみた話 - Gunosy Tech Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://developer.hatenastaff.com/entry/2022/06/21/173000&#34;&gt;外部サービスからのローカル用コールバックをLambdaのビルトインHTTPSエンドポイントにした話 - Hatena Developer Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://tech.hey.jp/entry/2022/03/28/122939&#34;&gt;モックしないテストも書く話 - hey Product Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://eng-blog.iij.ad.jp/archives/11384&#34;&gt;IIJ Bootcampでちょっとだけムキムキになった話（新人目線の受講感想） | IIJ Engineers Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://engineering.linecorp.com/ja/blog/data-lineage-on-line-big-data-platform&#34;&gt;LINEの大規模なData PlatformにData Lineageを導入した話&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://engineering.mercari.com/blog/entry/20220419-14cfb92734/&#34;&gt;ゼロからメルペイのリアルタイム不正検知システムを作る話 | メルカリエンジニアリング&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://tech.mirrativ.stream/entry/2021/12/10/201108&#34;&gt;Unityチームで出社してわかりあい会をしたお話 - Mirrativ Tech Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://nulab.com/ja/blog/nulab/graphql-apollo-relay-urql/&#34;&gt;GraphQLライブラリをApollo→Relay→Urqlにハシゴした話 | 株式会社ヌーラボ(Nulab inc.)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://inside.pixiv.blog/2022/05/17/150000&#34;&gt;ピクシブの Slack にある交流チャンネルの話 - pixiv inside&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.studysapuri.jp/entry/2022/01/12/080000&#34;&gt;AWS SSO を導入してセキュリティと利便性を改善した話 - スタディサプリ Product Team Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://engineer.retty.me/entry/2022/04/20/130800&#34;&gt;Alamofire v4からv5への更新で苦労した話 - Retty Tech Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://buildersbox.corp-sansan.com/entry/2022/06/23/110000&#34;&gt;【R&amp;amp;D DevOps通信】GCP App Engine(GAE)でDNS_PROBE_FINISHED_NXDOMAINが出て苦労した話 - Sansan Builders Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://tech.smartcamp.co.jp/entry/price-optimization-using-cloudflare-workerkv&#34;&gt;Cloudflareの画像最適化料金をWorker KVで97%削減した話 - SMARTCAMP Engineer Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://tech.smarthr.jp/entry/kpi-and-product-vision&#34;&gt;KPIを追いかけていたらプロダクトビジョンにたどり着いた話 - SmartHR Tech Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://developer.smartnews.com/blog/2021/03/chrome_tracing/&#34;&gt;特定の端末のみで起こる WebView プチフリーズを Tracing を利用して追った話 - SmartNews Engineering Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://techblog.cartaholdings.co.jp/entry/2021/07/09/110000&#34;&gt;flask+marshmallowなAPIをOpenAPIを使った仕組みに移行した話 - CARTA TECH BLOG&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.wantedly.com/companies/wantedly/post_articles/388258&#34;&gt;SWCの設定ファイルをコミットできないのが間接的にVimのせいだった話 | Wantedly Engineer Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://techblog.yahoo.co.jp/entry/2022053130304037/&#34;&gt;コード品質を上げるために凝集度解析ツールをGo言語で自作した話 - Yahoo! JAPAN Tech Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://techblog.zozo.com/entry/frontend_improve&#34;&gt;Vue.js＋Vuex＋TypeScriptのWebフロントエンド開発現場を前向きに改善した話 - ZOZO TECH BLOG&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://techlife.cookpad.com/entry/2022/02/01/170000&#34;&gt;クックパッドの基盤をフル活用して新卒が新規アプリケーションを作った話 - クックパッド開発者ブログ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://tech.dely.jp/entry/2021/12/10/103220&#34;&gt;SwiftUIをクラシルに導入した話 - dely tech blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://tech.medpeer.co.jp/entry/2022/01/24/155347&#34;&gt;Ruby v3.1.0のSegmentation faultに遭遇した話 - メドピア開発者ブログ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;ここに並べているのは本当に適当にサンプリングしたものではあるが、眺めていると傾向は見えてくる。テーマとしては業務改善系、インフラ系、人事組織や企業文化に関するものが多いようだ。また、結論だけ伝えたいわけでなく、課題感やそれに対する取り組み、その結果といった一連の顛末を含めて、まさにストーリーとしての読み物に「〇〇した話」というフォーマットが利用されやすいのかもしれない。&lt;/p&gt;
&lt;p&gt;また、「あくまでうちの会社の話ですよ」的なエクスキューズになり、筆者としては心理的なハードルが下がるのかもしれない。確かに、こんな零細個人サイトであれば好きなことを書けるが、会社の看板を背負って発信するのであれば、「うちでやってる取り組みの一例です」という予防線を張りたくなるのはとても良くわかる。&lt;/p&gt;
&lt;p&gt;加えて、これは個人の肌感なのでぜんぜん違うと感じる人もいるかもしれないが、「○○した話」フォーマットは LT でよく見かけるタイトルのように感じていて、 LT が盛んな文化にいる人が記事を書くと同じフォーマットになるのかもしれない、とも考えている。&lt;/p&gt;
&lt;p&gt;というところで、ある程度は意図や背景を理解できたので、今後は色眼鏡なしで記事を読めそうだ。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;ところで、いつ頃から使われるようになったのだろうという疑問がある。&lt;/p&gt;
&lt;p&gt;Qiita でタイトルに「した話」を含む最古の記事を調べてみたところ、 Qiita が提供している検索機能で取得できる範囲では以下がそれに当たるようだ。投稿日は2013年01月30日である。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/aya_eiya/items/9dfe41acc807e9b96c96&#34;&gt;GGJ2013に参加した話 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Qiita 自体は2011年からサービスを提供しているはずなので、2011年と2012年には「〇〇した話」フォーマットの記事は存在しなかったことになる。その後、右肩上がりに記事数は増え、2020年にピークを迎えて年間607記事が投稿されている。今年はもう半年過ぎているので、おそらく607件には届かなさそう。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/search?sort=created&amp;amp;q=title%3A%22%E3%81%97%E3%81%9F%E8%A9%B1%22%20created%3A%3C2011-12-31%20&#34;&gt;「title:&amp;ldquo;した話&amp;rdquo; created:&amp;lt;2011-12-31 」の検索結果 - Qiita&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;0件&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/search?sort=created&amp;amp;q=title%3A%22%E3%81%97%E3%81%9F%E8%A9%B1%22%20created%3A%3E2012-01-01%20created%3A%3C2012-12-31%20&#34;&gt;「title:&amp;ldquo;した話&amp;rdquo; created:&amp;gt;2012-01-01 created:&amp;lt;2012-12-31 」の検索結果 - Qiita&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;0件&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/search?sort=created&amp;amp;q=title%3A%22%E3%81%97%E3%81%9F%E8%A9%B1%22%20created%3A%3E2013-01-01%20created%3A%3C2013-12-31%20&#34;&gt;「title:&amp;ldquo;した話&amp;rdquo; created:&amp;gt;2013-01-01 created:&amp;lt;2013-12-31 」の検索結果 - Qiita&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;7件&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/search?sort=created&amp;amp;q=title%3A%22%E3%81%97%E3%81%9F%E8%A9%B1%22%20created%3A%3E2014-01-01%20created%3A%3C2014-12-31%20&#34;&gt;「title:&amp;ldquo;した話&amp;rdquo; created:&amp;gt;2014-01-01 created:&amp;lt;2014-12-31 」の検索結果 - Qiita&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;37件&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/search?sort=created&amp;amp;q=title%3A%22%E3%81%97%E3%81%9F%E8%A9%B1%22%20created%3A%3E2015-01-01%20created%3A%3C2015-12-31%20&#34;&gt;「title:&amp;ldquo;した話&amp;rdquo; created:&amp;gt;2015-01-01 created:&amp;lt;2015-12-31 」の検索結果 - Qiita&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;105件&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/search?sort=created&amp;amp;q=title%3A%22%E3%81%97%E3%81%9F%E8%A9%B1%22%20created%3A%3E2016-01-01%20created%3A%3C2016-12-31%20&#34;&gt;「title:&amp;ldquo;した話&amp;rdquo; created:&amp;gt;2016-01-01 created:&amp;lt;2016-12-31 」の検索結果 - Qiita&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;177件&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/search?sort=created&amp;amp;q=title%3A%22%E3%81%97%E3%81%9F%E8%A9%B1%22%20created%3A%3E2017-01-01%20created%3A%3C2017-12-31%20&#34;&gt;「title:&amp;ldquo;した話&amp;rdquo; created:&amp;gt;2017-01-01 created:&amp;lt;2017-12-31 」の検索結果 - Qiita&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;240件&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/search?sort=created&amp;amp;q=title%3A%22%E3%81%97%E3%81%9F%E8%A9%B1%22%20created%3A%3E2018-01-01%20created%3A%3C2018-12-31%20&#34;&gt;「title:&amp;ldquo;した話&amp;rdquo; created:&amp;gt;2018-01-01 created:&amp;lt;2018-12-31 」の検索結果 - Qiita&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;343件&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/search?sort=created&amp;amp;q=title%3A%22%E3%81%97%E3%81%9F%E8%A9%B1%22%20created%3A%3E2019-01-01%20created%3A%3C2019-12-31%20&#34;&gt;「title:&amp;ldquo;した話&amp;rdquo; created:&amp;gt;2019-01-01 created:&amp;lt;2019-12-31 」の検索結果 - Qiita&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;567件&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/search?sort=created&amp;amp;q=title%3A%22%E3%81%97%E3%81%9F%E8%A9%B1%22%20created%3A%3E2020-01-01%20created%3A%3C2020-12-31%20&#34;&gt;「title:&amp;ldquo;した話&amp;rdquo; created:&amp;gt;2020-01-01 created:&amp;lt;2020-12-31 」の検索結果 - Qiita&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;607件&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/search?sort=created&amp;amp;q=title%3A%22%E3%81%97%E3%81%9F%E8%A9%B1%22%20created%3A%3E2021-01-01%20created%3A%3C2021-12-31%20&#34;&gt;「title:&amp;ldquo;した話&amp;rdquo; created:&amp;gt;2021-01-01 created:&amp;lt;2021-12-31 」の検索結果 - Qiita&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;574件&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/search?sort=created&amp;amp;q=title%3A%22%E3%81%97%E3%81%9F%E8%A9%B1%22%20created%3A%3E2022-01-01%20&#34;&gt;「title:&amp;ldquo;した話&amp;rdquo; created:&amp;gt;2022-01-01 」の検索結果 - Qiita&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;211件&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;一方で、技術記事に限らず軽く調べてみたところ、『ビリギャル』が見つかった。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://ja.wikipedia.org/wiki/%E5%AD%A6%E5%B9%B4%E3%83%93%E3%83%AA%E3%81%AE%E3%82%AE%E3%83%A3%E3%83%AB%E3%81%8C1%E5%B9%B4%E3%81%A7%E5%81%8F%E5%B7%AE%E5%80%A4%E3%82%9240%E4%B8%8A%E3%81%92%E3%81%A6%E6%85%B6%E6%87%89%E5%A4%A7%E5%AD%A6%E3%81%AB%E7%8F%BE%E5%BD%B9%E5%90%88%E6%A0%BC%E3%81%97%E3%81%9F%E8%A9%B1&#34;&gt;学年ビリのギャルが1年で偏差値を40上げて慶應大学に現役合格した話 - Wikipedia&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;原作書籍の発行日は2013年12月27日であるが、2015年5月1日公開の映画では『映画 ビリギャル』とタイトルが変更されていることから、マーケティング観点で「した話」フォーマットより『ビリギャル』のほうが良いと判断されたのかもしれない。&lt;/p&gt;
&lt;p&gt;こういった商業コンテンツのタイトルに関してはもっと慎重に検証しなければならないと思うので深追いはしない。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;気持ち的には、掲示板の「〇〇した時の話する？」みたいな、軽いノリの表現なのかもしれない。しかし、そもそも「〇〇した時の話する？」の後に「その話聞かせてくれよ」と続いているのを見た記憶はなく、ほぼ「〇〇」の部分ですべてを伝えてしまっているので、なぜ問いかけているのかも良くわからない。「〇〇した時の話する？　いや、これうちのテックブログだったから勝手にするわ」の略が「○○した話」なのだろうか。&lt;/p&gt;
&lt;p&gt;誰か2017年に同じ疑問を持っている増田がいるので、返事をしてあげてほしい。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://anond.hatelabo.jp/20170715141046&#34;&gt;「〜した時の話する？」とは何なのか&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;付録：&lt;/p&gt;
&lt;p&gt;サンプリングしたテックブログ記事の URL を眺めていて面白いことに気づいた。URL 中の英語を見比べると「した話」的な英語が見つからない。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;3ヶ月間の英語研修でTOEICスコア 665 → 890 になった話 (my-english-learning-experience)&lt;/li&gt;
&lt;li&gt;iOSエンジニアがサーバーサイドもやってみた話 (ios_to_server_side)&lt;/li&gt;
&lt;li&gt;LINEの大規模なData PlatformにData Lineageを導入した話 (data-lineage-on-line-big-data-platform)&lt;/li&gt;
&lt;li&gt;GraphQLライブラリをApollo→Relay→Urqlにハシゴした話 (graphql-apollo-relay-urql)&lt;/li&gt;
&lt;li&gt;Cloudflareの画像最適化料金をWorker KVで97%削減した話 (price-optimization-using-cloudflare-workerkv)&lt;/li&gt;
&lt;li&gt;KPIを追いかけていたらプロダクトビジョンにたどり着いた話 (kpi-and-product-vision)&lt;/li&gt;
&lt;li&gt;特定の端末のみで起こる WebView プチフリーズを Tracing を利用して追った話 (chrome_tracing)&lt;/li&gt;
&lt;li&gt;Vue.js＋Vuex＋TypeScriptのWebフロントエンド開発現場を前向きに改善した話 (frontend_improve)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;こういう一覧を作るあたりが私の性格の悪さである。&lt;/p&gt;
</content:encoded>
      </item>
      <item>
        <title>現在の開発環境</title>
        <link>https://mochieer.tech/posts/2022/01/07/current-development-environment/</link>
        <pubDate>Fri, 07 Jan 2022 00:00:00 +0900</pubDate>
        
        <guid>https://mochieer.tech/posts/2022/01/07/current-development-environment/</guid>
        <description>我が家はマンションのメゾネットタイプで、 Wi-Fi ルーターは下の階、作業部屋は上の階にある。したがってやや電波が届きにくい。また、マンションあるある</description>
        <content:encoded>&lt;p&gt;我が家はマンションのメゾネットタイプで、 Wi-Fi ルーターは下の階、作業部屋は上の階にある。したがってやや電波が届きにくい。また、マンションあるあるだがインターネットがあまり速くない。結果的に下りで 10 Mbps も出ないなんてこともよくある。&lt;/p&gt;
&lt;p&gt;そういう事情もあり、 Ubuntu Server をインストールした古い ASUS のラップトップをルーターに直結し、作業部屋の MacBook から VS Code の &lt;a href=&#34;https://marketplace.visualstudio.com/items?itemName=ms-vscode-remote.remote-ssh&#34;&gt;Remote SSH&lt;/a&gt; でログインして開発を行っていた。&lt;/p&gt;
&lt;p&gt;私のプログラマのキャリアの初期は、サーバーに SSH で入ってサーバーの中で開発して Makefile でビルドしてファイルを配置していたような時代だったので、そういう旧時代的な開発スタイルは肌に合うし、牧歌的な感じで好きだったりする。したがって、趣味（物理的サーバー）と実益（通信速度）を兼ね備えた開発スタイルだったと言える。&lt;/p&gt;
&lt;p&gt;また、 macOS 上での Docker が遅すぎてストレスが半端でないので、ローカルで仮想 Linux を動かすくらいなら余っている別マシンで Linux を動かすというのは合理的でもあった。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;さて、前置きは長くなったが、現在は MacBook に完結して、 &lt;a href=&#34;https://multipass.run/&#34;&gt;Multipass&lt;/a&gt; で Ubuntu Server を動かして開発するようになった。&lt;/p&gt;
&lt;p&gt;きっかけは年末年始の 2 年ぶりの帰省で、「あれ、これはラップトップを 2 台持って実家に帰ることになるのか？」と気づいてしまったことにある。&lt;/p&gt;
&lt;p&gt;また、タイミングよく下記の記事が目に入ったのも良かった。この記事がなかったら EC2 的なインスタンスを作っていたり、 Cloud9 を試したりしていたかもしれない。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://tech.mirrativ.stream/entry/2021/12/21/125127&#34;&gt;Docker + Mac どうする問題 - Mirrativ Tech Blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;ということで、今は Multipass で Ubuntu Server を動かし、 VS Code の Remote SSH で開発している。もともと物理ラップトップに同じバージョンの Ubuntu Server をインストールして使っていたので、比較的スムーズに移行できた。&lt;/p&gt;
&lt;p&gt;ASUS のラップトップも、思えばそろそろ 10 年選手なので天寿を全うする前に引っ越しできてよかったかもしれない。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;最後に、つまづいたポイントと、解決に役立った記事を書いておく 🙏&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://multipass.run/docs/launch-command&#34;&gt;特にオプションを付けずにインスタンスを作ると disk=5G / memory=1G で生成される&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;Node を使う場合は 1G なんかでは絶対足りない&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/canonical/multipass/issues/1158#issuecomment-548073024&#34;&gt;インスタンスを作った後に割り当てを変更する方法&lt;/a&gt;もあるので、やってみてダメだったら増やすのもあり&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/seibe/items/36cef7df85fe2cefa3ea&#34;&gt;apt で Node をインストールすると古かったりするので n を使う&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.virment.com/how-to-fix-system-limit-for-number-of-file-watchers-reached/&#34;&gt;watch 数の上限に達したので、上限を引き上げる&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content:encoded>
      </item>
      <item>
        <title>Baseus の GaN 充電器</title>
        <link>https://mochieer.tech/posts/2021/12/12/baseus-gan-charger/</link>
        <pubDate>Sun, 12 Dec 2021 00:00:00 +0900</pubDate>
        
        <guid>https://mochieer.tech/posts/2021/12/12/baseus-gan-charger/</guid>
        <description>Baseus GaN 2 Pro Quick Charger 65W と 100W 対応 USB-C ケーブル。奥に見えるのはガチャガチャでゲットしたカービィとワドルディ。 先月の Amazon のブラックフライデーで Baseus の GaN 充電器を購</description>
        <content:encoded>&lt;figure&gt;
    &lt;img
      src=&#34;https://i.gyazo.com/82ae37170a16791e12eb01fc77f07aee.jpg&#34;
      alt=&#34;お線香を焚いている様子&#34;width=&#34;2464&#34;height=&#34;1632&#34;
    /&gt;
  &lt;figcaption&gt;Baseus GaN 2 Pro Quick Charger 65W と 100W 対応 USB-C ケーブル。奥に見えるのはガチャガチャでゲットしたカービィとワドルディ。&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;先月の Amazon のブラックフライデーで &lt;a href=&#34;https://amzn.to/3oOe0jc&#34;&gt;Baseus の GaN 充電器&lt;/a&gt;を購入した。これ自体は最大 65W 出力のものだが、なぜか 100W の USB-C ケーブルがついてきた。&lt;/p&gt;
&lt;p&gt;今まで MacBook Pro の充電は Apple の純正のものでやっていたり、電源周りには無頓着でいたのだが、冬場になり足元にパネルヒーターを出してみたもののコンセントの数が足りず困っていた。そこで、わりと評判が良く以前から気になっていた Baseus の製品を購入してみた。&lt;/p&gt;
&lt;p&gt;Baseus は中国の家電ブランドで、名前の由来は Base on User というスローガンを縮めたものらしい。実物を手に取るのは初めてだったが、安物感は全くなく、満足している。中国でもアメリカでもヨーロッパでも日本でも、どこでも安かろう悪かろうな製品はあるので、結局の所は信頼できる人が評価しているかどうかが重要な世の中になってしまっている。&lt;/p&gt;
&lt;p&gt;2つの USB-C ポートと1つの USB-A ポートがあり、普段は USB-C で MacBook Pro とスマホ（Pixel 3a）を同時に充電している。同時に使用しても 45W + 18W の出力が可能とのことなので、スマホにもいわゆる急速充電が可能だ。出かけることは滅多にないが、 USB-A があるのでこれひとつ持っていけば事足りるという安心感もある。&lt;/p&gt;
&lt;p&gt;数年前から日進月歩の GaN 充電器というカテゴリーについてだが、日進月歩であるがゆえにあるタイミングで最新の技術だったものが、1年後には陳腐なものになっていたりする。今だとクレカサイズで 100W 出力可能なものが続々と出てきているが、数年経つと「え、なんでこんなでっかい充電器つかってんの（笑）」みたいなことになりかねない。ということで、あまりスペックそのものにこだわらず、今の自分が欲しい出力が得られ、持ち歩きが億劫でなく他のプラグと干渉しない程度に小さい充電器を買うのが良いのかな、という気がしている。&lt;/p&gt;
&lt;p&gt;この製品について1点だけ微妙な点がある。複数のポートを同時に利用している際にコードの抜き差しをすると、瞬間的に給電が切断されているように見える。出力の切り替えを行っているのだろう。このせいで、 Mac をスリープしてスマホの充電を抜いて立ち上がると、 Mac が充電器に接続されたと認識してロック画面を表示させたりする。まあその程度の問題ではあるのだが、地味に気になっている。&lt;/p&gt;
</content:encoded>
      </item>
      <item>
        <title>お線香</title>
        <link>https://mochieer.tech/posts/2021/11/07/incense/</link>
        <pubDate>Sun, 07 Nov 2021 00:00:00 +0900</pubDate>
        
        <guid>https://mochieer.tech/posts/2021/11/07/incense/</guid>
        <description>お線香を焚いている様子。奥に見えるのはガチャガチャでゲットしたカービィとワドルディ。 最近、奥さんがとあるモデルさんのオンラインコミュニティに</description>
        <content:encoded>&lt;figure&gt;
    &lt;img
      src=&#34;https://i.gyazo.com/1e1fa822bb9433f22e65f559195222bf.jpg&#34;
      alt=&#34;お線香を焚いている様子&#34;width=&#34;3613&#34;height=&#34;2710&#34;
    /&gt;
  &lt;figcaption&gt;お線香を焚いている様子。奥に見えるのはガチャガチャでゲットしたカービィとワドルディ。&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;最近、奥さんがとあるモデルさんのオンラインコミュニティに入会した。定期的にインスタグラムでライブ配信をしていたり、なんらかの商品が届いたりしている。私のお仕事の事業とも近しいものがあり、興味深く観察している。&lt;/p&gt;
&lt;p&gt;2ヶ月ほど前に &lt;a href=&#34;https://sen-n.com/&#34;&gt;SENN&lt;/a&gt; というところの製品が届き、そのうちインセンス（お線香）を「仕事のときに使ってみれば？」と譲り受けた。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;それから毎朝、何かしらのお線香を焚いて仕事を始めるようにしている。特にこれがないとダメというわけではないが、習慣というか、仕事のスイッチというか、そういうものとして機能してくれているように思う。コーヒーと似ている。&lt;/p&gt;
&lt;p&gt;嗅覚は記憶と関連していて、脳のスイッチとして有効だと言われている。以前、アロマディフューザーを試したことがあったが、部屋全体がその香りになってしまって、個人的に少し合わなかった。お線香だと15分ほどで燃え尽きるので、脳のスイッチという意味では向いていると思う。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;気に入ったので追加で購入しようとしたのだが、結構お高い。&lt;a href=&#34;https://tokyokodo.online&#34;&gt;東京香堂&lt;/a&gt;が製作しているらしいのでそちらも見てみたが、やはりお高い。一本150円ほどする。1分10円、6秒で1円だ。&lt;/p&gt;
&lt;p&gt;私は貧乏性なので、あまり高価なものを使うと「ああ150円が燃えている…」と考えてしまうことは間違いなく、したがって本来期待する効果を全く得られなさそうだった。&lt;/p&gt;
&lt;p&gt;そこから比較的割安なお線香をいくつか試してみたので比較してみる。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.muji.com/jp/ja/store/cmdty/section/S1070253&#34;&gt;無印良品&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;390円 / 12本入&lt;/li&gt;
&lt;li&gt;白檀、ひのき、金木犀を試した&lt;/li&gt;
&lt;li&gt;香りは比較的強め&lt;/li&gt;
&lt;li&gt;無印っぽいミニマルな箱に入っていてかわいい&lt;/li&gt;
&lt;li&gt;やや煙たい&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.nipponkodo.co.jp/shop/products/detail/36736&#34;&gt;日本香堂 ナチュレンス&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;880円 / 40本&lt;/li&gt;
&lt;li&gt;洋風のアロマっぽい香り&lt;/li&gt;
&lt;li&gt;長いので半分に折って使っている（ので、実質80本入）&lt;/li&gt;
&lt;li&gt;わずかに煙たい&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.kameyama-candle.jp/ec/shop/category_items_detail.htm?Item=20120104&#34;&gt;カメヤマ 和遊&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;1,320円 / 90g&lt;/li&gt;
&lt;li&gt;数える気にもならないくらい入っているがたぶん300本くらい&lt;/li&gt;
&lt;li&gt;煙が少なく、香りもやや控えめ&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://shop.sen-n.com/products/incense-tomoshibi-uzumibi/&#34;&gt;SENN（東京香堂）&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;2,860円 / 20本&lt;/li&gt;
&lt;li&gt;他と比較すると高価だが、そのぶんモノは違う&lt;/li&gt;
&lt;li&gt;煙の広がり方が優しく、したがって香りの広がりも優しい&lt;/li&gt;
&lt;li&gt;煙もほとんど鼻につかない&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;コスパでいうとカメヤマが最強になってしまうのだが、こんなにたくさん買ってしまうと全然なくならなくて困っている。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;そもそもどこで売っているのだろうと思って、最初はネットで見ていたが、百貨店などで仏具屋さんを見かけて入ってみたところ、お仏壇用のいわゆるお線香だけでなく、香りのあるものも取り扱っているところが多かった。中にはディズニーとコラボしていたり、結構ポップなものもあり、普段入らないお店に入る機会にもなってよかった。&lt;/p&gt;
&lt;p&gt;またカメヤマの大量のお線香を消費したらいろいろ試すので、良いものを発見したら続編を書きたい。&lt;/p&gt;
</content:encoded>
      </item>
  </channel>
</rss>
