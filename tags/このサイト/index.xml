<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>mochieer.techの新着記事</title>
    <link>https://mochieer.tech</link>
    <description>mochieer.techの新着記事</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <copyright>(c) mochieer</copyright>
    <lastBuildDate>Sun, 18 Oct 2020 00:00:00 +0000</lastBuildDate>
    <managingEditor>mochieer@gmail.com (mochieer)</managingEditor>
    <atom:link href="https://mochieer.tech/tags/%E3%81%93%E3%81%AE%E3%82%B5%E3%82%A4%E3%83%88/index.xml" rel="self" type="application/rss+xml" />
    <item>
        <title>GitHub Actions でビルドするようにした</title>
        <link>https://mochieer.tech/posts/20201018-github-actions/</link>
        <pubDate>Sun, 18 Oct 2020 00:00:00 +0000</pubDate>
        <author>mochieer@gmail.com (mochieer)</author>
        <guid>https://mochieer.tech/posts/20201018-github-actions/</guid>
        <description>peaceiris/actions-gh-pages こちらを利用した。基本的にはデフォルトの設定通りでいけたのでとても簡単だった。 自分のリポジトリはデフォルトブランチが main だったが、サンプルの</description>
        <content:encoded>&lt;p&gt;&lt;a href=&#34;https://github.com/peaceiris/actions-gh-pages&#34;&gt;peaceiris/actions-gh-pages&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;こちらを利用した。基本的にはデフォルトの設定通りでいけたのでとても簡単だった。&lt;/p&gt;
&lt;p&gt;自分のリポジトリはデフォルトブランチが &lt;code&gt;main&lt;/code&gt; だったが、サンプルの設定ファイルでは &lt;code&gt;master&lt;/code&gt; になっていたので、そこだけ直した。（これは誰が悪いのか）&lt;/p&gt;
&lt;p&gt;あわせて、このサイトのソースコードを public にしてみた。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/mochieer/mochieer.tech&#34;&gt;mochieer/mochieer.tech&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ソースコードの管理とビルドとホスティングをひとつのサービスで一貫できるというのはやはりかなり嬉しい。&lt;/p&gt;
&lt;p&gt;Netlify は GitHub との連携がかなり良くて気に入っていたが、日本からだとネットワーク的に遠いのか、やたら遅い印象がある。&lt;/p&gt;
</content:encoded>
      </item><item>
        <title>サイトをリニューアルした</title>
        <link>https://mochieer.tech/posts/20201005-renewal/</link>
        <pubDate>Mon, 05 Oct 2020 00:00:00 +0000</pubDate>
        <author>mochieer@gmail.com (mochieer)</author>
        <guid>https://mochieer.tech/posts/20201005-renewal/</guid>
        <description>自分の考えをアウトプットする場はやはり個人サイトがいいなあ、とここ1, 2年強く思うようになった。 エイチーム、プログラマ向け情報共有サービス「</description>
        <content:encoded>&lt;p&gt;自分の考えをアウトプットする場はやはり個人サイトがいいなあ、とここ1, 2年強く思うようになった。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://jp.techcrunch.com/2017/12/22/ateam-increments/&#34;&gt;エイチーム、プログラマ向け情報共有サービス「Qiita」提供元のIncrementsを約14億円で買収 | TechCrunch Japan&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://increments.co.jp/releases/2020/03/about-user-page-renewal-20200331/&#34;&gt;ご報告とお詫び 「Qiita」「Qiita Jobs」におけるユーザー情報の取り扱い不備について - Increments株式会社&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Qiita はビジネスを進めなければならないので、こういうことも起こりうる。ユーザーの思いとビジネス判断が異なるなんて当たり前だ。これは別に Qiita が悪いとかはあまり思っていない。だって営利企業だもんね。社員抱えているしね。くらいの印象。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://qrunch.net/@dev/entries/mad01egh8QmcuN3f&#34;&gt;サービス終了のお知らせ | Qrunch（クランチ）&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;個人的開発の Qrunch も頑張っていたがやはり難しそうな印象。検索エンジンに noindex な「作業ログ」という投稿のタイプが面白くて、しばらくはちまちま投稿していたが、厳しそうだったのでこのお知らせが出る少し前にデータを引き上げてしまった。&lt;/p&gt;
&lt;p&gt;そして新たに Zenn が出てきて、スタートダッシュは結構好調っぽい。ポエムを OK としているので、ポエミーな記事が結構多く、自分好みではある。が、やはり Qiita と同じで、コンテンツとユーザーを集めて作っていくコミュニティは、時にユーザーには受け入れがたいことをしなければならない場合があるだろうと思っている。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://r7kamura.com/articles/2020-09-21-personal-website&#34;&gt;個人サイトについて&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;文章を書くときに、いいね中毒や、批判への恐怖に晒されたくないという気持ちがある。そういったものが滲み出た文章は、読むのも書くのも好きではない。他者からのフィードバックと適切に距離を置くことで、この気持ちは抑制できる。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;フィードバックがあることでよりよい文章が書けるということももちろんあるが、そうでない場合もある。承認欲求は脳をバグらせる。&lt;/p&gt;
&lt;p&gt;こういうことをいろいろ考えて、よし、ほぼ更新していなかった mochieer.tech ドメインのサイトを再始動させようとなった。&lt;/p&gt;
&lt;p&gt;以前作ったときは、ブログ色を強くしていたので、文字の読みやすさとか、見た目のきれいさとか、あとはソーシャルへのシェアとか、そのあたりを気にしながら作った覚えがある。&lt;/p&gt;
&lt;p&gt;個人サイトへ回帰するにあたって、こんなものは99%くらいは自分のためのものだという感覚で、自身の色を、文字通り色として強く押し出してみた。とても読みにくい。イメージ的にはポートフォリオっぽい雰囲気の日記（ブログ）。&lt;/p&gt;
&lt;p&gt;技術的には、以前の使い回しなので Hugo を継続している。Hugo はやはり楽しい。HTML と CSS を生で書いている感覚で、それなりにメンテナンス可能な開発が出来る点が好きだ。&lt;/p&gt;
</content:encoded>
      </item>
  </channel>
</rss>
